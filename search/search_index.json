{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to AutoQA AutoQA is an AI-powered automated test generation, validation, and repair tool. Use the navigation to learn how to generate tests, repair failing tests, and contribute to the project.","title":"Home"},{"location":"#welcome-to-autoqa","text":"AutoQA is an AI-powered automated test generation, validation, and repair tool. Use the navigation to learn how to generate tests, repair failing tests, and contribute to the project.","title":"Welcome to AutoQA"},{"location":"about/","text":"About AutoQA What is AutoQA? A CLI tool to speed up development work and empower developers to code with confidence using the power of a QA Copilot. What will it be? An agentic platform for QA Ops to secure the quality of the code that developers ship to production. What does AutoQA do today? A basic CLI tool that generates and fixes unit tests. Right now, Jest and Pytest are supported, with more frameworks and libraries on the way. What will it become? Support for the entire software testing lifecycle, including E2E, smoke tests, manual testing, and user stories. How do I get involved? Contribute to the open-source CLI tool Provide feedback and submit feature requests Sign up for the future cloud-hosted platform Join the Slack community How do I get in touch? Email: sheltonwlsn@gmail.com Slack: AutoQA Slack","title":"About"},{"location":"about/#about-autoqa","text":"","title":"About AutoQA"},{"location":"about/#what-is-autoqa","text":"A CLI tool to speed up development work and empower developers to code with confidence using the power of a QA Copilot.","title":"What is AutoQA?"},{"location":"about/#what-will-it-be","text":"An agentic platform for QA Ops to secure the quality of the code that developers ship to production.","title":"What will it be?"},{"location":"about/#what-does-autoqa-do-today","text":"A basic CLI tool that generates and fixes unit tests. Right now, Jest and Pytest are supported, with more frameworks and libraries on the way.","title":"What does AutoQA do today?"},{"location":"about/#what-will-it-become","text":"Support for the entire software testing lifecycle, including E2E, smoke tests, manual testing, and user stories.","title":"What will it become?"},{"location":"about/#how-do-i-get-involved","text":"Contribute to the open-source CLI tool Provide feedback and submit feature requests Sign up for the future cloud-hosted platform Join the Slack community","title":"How do I get involved?"},{"location":"about/#how-do-i-get-in-touch","text":"Email: sheltonwlsn@gmail.com Slack: AutoQA Slack","title":"How do I get in touch?"},{"location":"cli/","text":"CLI Commands Generate tests auto generate --project ./my-app --type unit --framework pytest Repair a test auto repair-test --source-file ./src/module.js --test-file ./tests/module.test.js --project-root ./ --framework jest Fix all tests in a project auto fix --project ./my-app --type unit --framework jest","title":"CLI"},{"location":"cli/#cli-commands","text":"","title":"CLI Commands"},{"location":"cli/#generate-tests","text":"auto generate --project ./my-app --type unit --framework pytest","title":"Generate tests"},{"location":"cli/#repair-a-test","text":"auto repair-test --source-file ./src/module.js --test-file ./tests/module.test.js --project-root ./ --framework jest","title":"Repair a test"},{"location":"cli/#fix-all-tests-in-a-project","text":"auto fix --project ./my-app --type unit --framework jest","title":"Fix all tests in a project"},{"location":"contributing/","text":"Contributing Thank you for your interest in contributing to AutoQA! How to contribute Fork the repository. Create a new branch for your feature or fix. Install dependencies: pip install -e '.[dev]' pre-commit install Run tests: pytest Format code: black . Open a pull request.","title":"Contributing"},{"location":"contributing/#contributing","text":"Thank you for your interest in contributing to AutoQA!","title":"Contributing"},{"location":"contributing/#how-to-contribute","text":"Fork the repository. Create a new branch for your feature or fix. Install dependencies: pip install -e '.[dev]' pre-commit install Run tests: pytest Format code: black . Open a pull request.","title":"How to contribute"},{"location":"roadmap/","text":"\ud83d\udee3\ufe0f AutoQA Roadmap This roadmap outlines what has been built and what is planned for the future. \u2705 = Done \ud83d\udfe1 = In Progress \ud83d\udd39 = Planned \u2705 Phase 1 \u2014 Core MVP \u2705 CLI scaffolding ( generate , resume , repair ) \u2705 LangGraph workflows for test generation, validation, approval, repair \u2705 Support for pytest, jest, cypress, playwright \u2705 Agent-based file classification \u2705 Slack notifications \u2705 Retry logic for failing tests \u2705 Manual QA checklist generation \u2705 Phase 2 \u2014 Polishing & Readiness \u2705 Rich progress indicators \u2705 Config file support ( .autoqa.toml ) \u2705 Clean logs and improved CLI UX \u2705 GitHub Actions CI setup \u2705 OSS documentation and licensing \ud83d\udfe1 Phase 3 \u2014 Enhancements & Extensibility \ud83d\udd39 Color-coded console logs \ud83d\udd39 Interactive CLI prompts for approvals \ud83d\udd39 Expanded framework support (Mocha, RSpec) \ud83d\udd39 Advanced Slack notifications with test summaries \ud83d\udd39 Plugin architecture for custom generators \ud83d\udd39 Dockerized test execution environments \ud83d\udd39 Phase 4 \u2014 Cloud Platform (SaaS) \ud83d\udd39 Hosted backend API REST API for triggering workflows \ud83d\udd39 Cloud execution and artifact storage \ud83d\udd39 Web dashboard for results and approvals \ud83d\udd39 GitHub/GitLab integration \ud83d\udd39 Slack and email notifications \ud83d\udd39 Usage-based billing and subscriptions \u2705 Contributions and feedback are welcome!","title":"Roadmap"},{"location":"roadmap/#autoqa-roadmap","text":"This roadmap outlines what has been built and what is planned for the future. \u2705 = Done \ud83d\udfe1 = In Progress \ud83d\udd39 = Planned","title":"\ud83d\udee3\ufe0f AutoQA Roadmap"},{"location":"roadmap/#phase-1-core-mvp","text":"\u2705 CLI scaffolding ( generate , resume , repair ) \u2705 LangGraph workflows for test generation, validation, approval, repair \u2705 Support for pytest, jest, cypress, playwright \u2705 Agent-based file classification \u2705 Slack notifications \u2705 Retry logic for failing tests \u2705 Manual QA checklist generation","title":"\u2705 Phase 1 \u2014 Core MVP"},{"location":"roadmap/#phase-2-polishing-readiness","text":"\u2705 Rich progress indicators \u2705 Config file support ( .autoqa.toml ) \u2705 Clean logs and improved CLI UX \u2705 GitHub Actions CI setup \u2705 OSS documentation and licensing","title":"\u2705 Phase 2 \u2014 Polishing &amp; Readiness"},{"location":"roadmap/#phase-3-enhancements-extensibility","text":"\ud83d\udd39 Color-coded console logs \ud83d\udd39 Interactive CLI prompts for approvals \ud83d\udd39 Expanded framework support (Mocha, RSpec) \ud83d\udd39 Advanced Slack notifications with test summaries \ud83d\udd39 Plugin architecture for custom generators \ud83d\udd39 Dockerized test execution environments","title":"\ud83d\udfe1 Phase 3 \u2014 Enhancements &amp; Extensibility"},{"location":"roadmap/#phase-4-cloud-platform-saas","text":"\ud83d\udd39 Hosted backend API REST API for triggering workflows \ud83d\udd39 Cloud execution and artifact storage \ud83d\udd39 Web dashboard for results and approvals \ud83d\udd39 GitHub/GitLab integration \ud83d\udd39 Slack and email notifications \ud83d\udd39 Usage-based billing and subscriptions \u2705 Contributions and feedback are welcome!","title":"\ud83d\udd39 Phase 4 \u2014 Cloud Platform (SaaS)"}]}